Bootstrap: docker
From: centos:7

%setup
   mkdir -p ${SINGULARITY_ROOTFS}/build/grass_modules
   mkdir -p ${SINGULARITY_ROOTFS}/build/grass_program
   
%files
    ./GRASS_modules/* /build/grass_modules
    ./GRASS_program/* /build/grass_program

%environment
    # this is what is needed to set grass up properly
    # the reason we need to do this is that we are running scripts outside of the interactive grass environment, 
    # and thus need to do all the environmental set up ourselves in order to run grass commands in the shell 
    # see https://grasswiki.osgeo.org/wiki/Working_with_GRASS_without_starting_it_explicitly for explanation
    # "bash examples" section, and https://grasswiki.osgeo.org/wiki/GRASS_and_Shell for further explanation
   
   export GISBASE=/usr/local/grass-6.5.svn

   export PATH=$PATH:$GISBASE/bin:$GISBASE/scripts

   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GISBASE/lib

   # set PYTHONPATH to include the GRASS Python lib
   if [ ! "$PYTHONPATH" ] ; then
      PYTHONPATH="$GISBASE/etc/python"
   else
      PYTHONPATH="$GISBASE/etc/python:$PYTHONPATH"
   fi
   export PYTHONPATH

   # use process ID (PID) as lock file number:
   export GIS_LOCK=$$

   # settings for graphical output to PNG file (optional)
   export GRASS_PNGFILE=/mnt/data/grass6out.png
   export GRASS_RENDER_TRANSPARENT=TRUE
   export GRASS_RENDER_FILE_READ=TRUE
   export GRASS_TRUECOLOR=TRUE
   export GRASS_WIDTH=1200
   export GRASS_HEIGHT=800
   export GRASS_RENDER_IMMEDIATE=png
   
   export GRASS_VERSION="6.5.svn"
   MYGISDBASE=/mnt/data/grassdata
   MYMAPSET=morgan_DSSAT_cat_0
   MYLOC=world
MYGISRC="$HOME/.grassrc.$GRASS_VERSION.$$"

echo "GISDBASE: $MYGISDBASE" > "$MYGISRC"
echo "LOCATION_NAME: $MYLOC" >> "$MYGISRC"
echo "MAPSET: $MYMAPSET" >> "$MYGISRC"
echo "GRASS_GUI: text" >> "$MYGISRC"
 
# path to GRASS settings file
export GISRC=$MYGISRC
export GRASS_PYTHON=python
export GRASS_MESSAGE_FORMAT=plain
export GRASS_TRUECOLOR=TRUE
export GRASS_TRANSPARENT=TRUE
export GRASS_PNG_AUTO_WRITE=TRUE
export GRASS_GNUPLOT='gnuplot -persist'
export GRASS_HTML_BROWSER=firefox
export GRASS_PAGER=cat

#For the temporal modules
export TGISDB_DRIVER=sqlite
export TGISDB_DATABASE=$MYGISDBASE/$MYLOC/PERMANENT/tgis/sqlite.db

# for fun, we can even set the shell prompt to contain a hint on GRASS GIS env being active
export PS1="[\u@\h \W G-$GRASS_VERSION]$ "

# system vars
export PATH="$GISBASE/bin:$GISBASE/scripts:$PATH"
export LD_LIBRARY_PATH="$GISBASE/lib"
export GRASS_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
export PYTHONPATH="$GISBASE/etc/python:$PYTHONPATH"
export MANPATH=$MANPATH:$GISBASE/man
export JAVA_HOME=/usr/bin/java


%post
    mkdir /mnt/data

    # install GRASS dependencies

    #yum -y update
    yum groupinstall -y "Development Tools"
    yum install -y epel-release
    #yum --disablerepo=epel -y update  ca-certificates
    yum install -y proj-devel gdal-devel sqlite-devel mesa-libGL-devel \
        mesa-libGLU-devel libXmu-devel libX11-devel tcl-devel tk-devel geos \
    fftw-devel libtiff-devel lesstif-devel python-devel numpy wxPython wxGTK-devel \
    gcc gcc-c++ bison flex ncurses-devel proj-epsg proj-nad xml2 subversion \
    geos-devel blas-devel lapack-devel xorg-x11-xauth python3

    ## add okay repo, install gpg key and then ffmpeg
    rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-5.el7.noarch.rpm \
    && yum install -y ffmpeg-devel

    yum -y install ImageMagick
    yum install -y java-11-openjdk-devel

    curl -L https://services.gradle.org/distributions/gradle-5.0-bin.zip > /tmp/gradle-5.0-bin.zip
    unzip -d /opt/gradle /tmp/gradle-5.0-bin.zip


    ## build GRASS
    cd /build/grass_program
    ./configure \
        --with-cxx \
    --with-gdal=/usr/bin/gdal-config \
    --with-proj --with-proj-share=/usr/share/proj \
    --with-sqlite \
    --with-nls \
    --with-geos \
    --with-wxwidgets=/usr/bin/wx-config \
    --with-python=/usr/bin/python-config \
    --with-freetype --with-freetype-includes=/usr/include/freetype2 \
    --enable-largefile \
    --without-odbc \
    --with-fftw \
    --with-blas \
    --with-lapack 
    make -j$(nproc) && make -j$(nproc) install

    ## Create generic GRASS GIS binary name regardless of version number
    ln -sf `find /usr/local/bin -name "grass??" | sort | tail -n 1` /usr/local/bin/grass


    ## build custom modules
    cd /build/grass_modules
    ## enter each module directory and make
    export GRASS_PREFIX=/usr/local/grass-6.5.svn/
    for m in {r.in.new,r.intersection,r.out.new,r.pixelarea}; do
        cd $m; make; cd ../
    done

    ## # clean up
    #cd 
    #rm -rf /build




















































































%runscript
    grass --version

    
