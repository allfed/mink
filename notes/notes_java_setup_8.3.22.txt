 I made all the paths relative so it should work for any instance of a git clone irrespective of usernames. Hopefully that makes it easier to work concurrently on this.

In this email I consider actual_program_4.7.5.11 and actual_program as synonymous, I was just lazy and didn't want to write out the name.

So anyway,  this error you're getting means that the java program called in the org/DSSATRunner folder with the file name WriteCopyBlockForDailyWeather doesn't exist.

I found it, it was in small_java_programs. So I added that back into the repo (but removed the actual_program directory, should be fine if we don't try to run wheat.)

And now I get another error within the java program, at least now it looks like it's loading properly.

this is the location now on my machine for the file, yours will be similar if you pull:

image.png

This is what WriteCopyBlockForDailyWeather appears to do:

    // the idea here is to take a table of climate averages and then generate daily weather from them
    // so that we have a whole bunch of DSSAT-style daily weather files laying around in some systematic
    // fasion...

so, this appears to not actually be what we want, I already have each daily weather set up. So that's a bit confusing, but maybe it's just a legacy comment that doesn't apply anymore.

I looked at the code. Looks like all it does is copy each latitude and longitude to a different location. So, It's probably not a problem.

I looked up how to compile a program in java. I did java way back years ago, but I remember that it's a very corporate and verbose language which I disliked. I also remember you have to compile it every time you change it, which is also not as nice. But enough complaining.
https://explainjava.com/compile-run-java-linux/

it appears the following was necessary to compile. Needless to say, we can't install this on the jasmin machine, so no java compiling there.
sudo apt install default-jdk # (found on https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-on-debian-9)

For silly reasons, the proper command ended up being
javac -Xlint org/DSSATRunner/WriteCopyBlockForDailyWeather.java
mv WriteCopyBlockForDailyWeather.class ../../../bin/org/DSSATRunner/WriteCopyBlockForDailyWeather.class

but then I found an alternative in the code that doesn't need sudo and runs real time, so you can ignore all of the above about java..
$ $java_to_use -cp [more arguments go here]
that's in line 138 mink3daily_run_dssat_tile.sh

There are a few problems at this stage.

First, the on_node_home directory will be in a loop and be writing a bunch of different data files with the same names, so we need to make sure the parallel processes which are all using that name are working properly. This just means ensuring whenever a file is created in the on_node_home location, it doesn't have the same filename.

destinationPath is the second command line argument to this java program, so at least that will need to be ensured that it's always different.

I ran a few tests with interesting results.

Tests were of the form:
./mink3daily_run_DSSAT_tile.sh D__1_noGCMcalendar_p0_maize__eitherN250_nonCLIMATE control_mink/Outdoor_crops_control mzJ029w00.SNX threeSplitWithFlowering 379 maize some_settings_46.sh 0

Test results always seem to be the same:
reached 1 in run DSSAT
   >>> using ./dscsm_compiled_fast.exe <<<
org.DSSATRunner.WriteCopyBlockForDailyWeather
That was IT
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 4 out of bounds for length 4
at org.DSSATRunner.WriteCopyBlockForDailyWeather.main(WriteCopyBlockForDailyWeather.java:28)
(standard_in) 1: syntax error
(standard_in) 1: syntax error
n_before_me = 0; maxstagger =  ; n_pixels = 1 / guess files per sec 40; need_to_delay =
reached 2
SUBMIT: RnonCLIMATE_r5135_027084237; #0 sleeping 0.1s

reached 4: this means that we were able to run the sbatch


The first test is I ran the program with and without the actual_program_4.7.5.11 folder. Despite the appearance that the program is running dscsm_compiled_fast.exe, I could not find any evidence of this actually running, because it worked with or without the actual_program_4.7.5.11 folder. dscsm_compiled_fast.exe is located in this actual_program folder. Regardless, to save on space we should get rid of actual_program if possible and just copy the executable in somewhere. Who knows if that executable needs all those other files in that folder... I strongly suspect the only reason we haven't had the dscsm executable run is that the program errored out before it actually happened.

I also tried running the program with and without the WriteCopyBlockForDailyWeather.java file. When there's no Write...too_lazy_to_type....java file, the program errors out
error: file not found: org/DSSATRunner/WriteCopyBlockForDailyWeather.java
Usage: javac <options> <source files>
use --help for a list of possible options

so the java file is definitely being used.

Another small fix: I got the staging area script_to_run set up so that it has the right name:
/home/dmrivers/Code/mink/basics_15jun22/sge_Mink3daily/staging_area/script_to_run_nonCLIMATE_r22485_100753689.sh

and also all the uses of staging_area inside that script needed a little tweaking to get everything sensible without accidental lack of slashes or accidental double slashes.

this was a problem for:
small_java_programs
sge_Mink3dailySNX_files
dailyweather

this line was evaluating java, and then returning the result as a bash string into copy_block.
copy_block=`$java_to_use -cp $headnode_classpath $daily_weather_copier_classname ${prestaged_weather_dir}$daily_to_use $on_node_weather_dir $data_file_base_name $weatherDataSuffixWithDot $latitude_resolution $longitude_resolution | uniq`

so then I tried

echo ""
echo "this is me trying to get the java program to run(DMR)"
$java_to_use -cp $headnode_classpath $daily_weather_copier_classname ${prestaged_weather_dir}$daily_to_use $on_node_weather_dir $data_file_base_name $weatherDataSuffixWithDot $latitude_resolution $longitude_resolution
echo "well, did it run then?"
echo ""

and It finally ran!

So now, I guess you can pick up from here and try to alter the java program so that it doesn't error out. Seems like there are too many arguments going to the java program.

Getting closer!

Thanks,
Morgan
Morgan Rivers <morgan@allfed.info>
    
8:36 PM (4 minutes ago)
    
to Ines
to clarify, I still haven't fixed
small_java_programs
sge_Mink3dailySNX_files
dailyweather

in the

/home/dmrivers/Code/mink/basics_15jun22/sge_Mink3daily/staging_area/script_to_run_nonCLIMATE_r22485_100753689.sh

or whatever other number file. A new one is created each time you run your command. Would be good to make sure there are no double slashes (//) in the compiled file